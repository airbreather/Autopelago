@tailwind base;
@tailwind components;
@tailwind utilities;

@font-face {
    font-family: 'Public Pixel';
    src: url(./public-pixel.ttf);
}

* {
    font-family: 'Public Pixel';
    font-size: small;
}

:root {
    --not-found-filter-recolor: saturate(0.2) brightness(0.3);
    --not-found-filter-drop-shadow: drop-shadow(0px 0px 5px rgba(234, 126, 128, 0.60));
    --found-filter-drop-shadow: drop-shadow(0px 0px 5px rgba(150, 150, 0, 0.70));
}

body {
    color-scheme: light dark;
    color: CanvasText;
    background: Canvas;
}

.received-item img {
    max-width: 64px;
    max-height: 64px;
    object-fit: scale-down;
}

.received-item:not(.not-found) {
    filter: var(--found-filter-drop-shadow);
}

.received-item.not-found {
    filter: var(--not-found-filter-recolor) var(--not-found-filter-drop-shadow);
}

.arrow-line,.arrow-head {
    stroke: CanvasText;
    fill: Canvas;
}

.landmark:not(.not-cleared,not-open) {
    filter: var(--found-filter-drop-shadow);
}

.landmark.not-cleared.not-open {
    filter: var(--not-found-filter-recolor) var(--not-found-filter-drop-shadow);
}

.landmark.current-region {
    transform-box: fill-box;
    transform-origin: center;
    animation: 1s linear 0s infinite wiggle;
}

.traversed-path.current-region .arrow-line {
    stroke-dasharray: 5;
    animation: 1s linear 0s infinite dash;
}

.traversed-path.not-open {
    filter: var(--not-found-filter-recolor);
}

@keyframes wiggle {
    0% {
        transform: rotate(-15deg);
    }

    50% {
        transform: rotate(15deg);
    }

    100% {
        transform: rotate(-15deg);
    }
}

@keyframes dash {
    from {
        stroke-dashoffset: 10;
    }
    to {
        stroke-dashoffset: 0;
    }
}
