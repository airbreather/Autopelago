<reactiveUi:ReactiveUserControl
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModels="clr-namespace:Autopelago.ViewModels"
    xmlns:reactiveUi="http://reactiveui.net"
    xmlns:materialIcons="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
    mc:Ignorable="d" d:DesignWidth="950" d:DesignHeight="450"
    x:Class="Autopelago.Views.GameStateView"
    x:DataType="viewModels:GameStateViewModel"
    x:TypeArguments="viewModels:GameStateViewModel">

    <Design.DataContext>
        <viewModels:GameStateViewModel SlotName="Ratthew" RatCount="6" HasConfidence="True">

            <viewModels:GameStateViewModel.ProgressionItemsCollected>
                <x:String>red_matador_cape</x:String>
                <x:String>premium_can_of_prawn_food</x:String>
            </viewModels:GameStateViewModel.ProgressionItemsCollected>

            <viewModels:GameStateViewModel.LocationsChecked>
                <x:String>basketball</x:String>
                <x:String>prawn_stars</x:String>
            </viewModels:GameStateViewModel.LocationsChecked>

            <viewModels:GameStateViewModel.LocationsAvailable>
                <x:String>angry_turtles</x:String>
            </viewModels:GameStateViewModel.LocationsAvailable>

        </viewModels:GameStateViewModel>
    </Design.DataContext>

    <Control.Styles>
        <Style Selector="Border.tracker-box">
            <Setter Property="BorderBrush" Value="#505050" />
        </Style>
        <Style Selector="Border.tracker-box:not(.horizontal-only)">
            <Setter Property="BorderThickness" Value="2" />
        </Style>
        <Style Selector="Border.horizontal-only">
            <Setter Property="BorderThickness" Value="0,2" />
        </Style>
        <Style Selector="TextBlock.meter-label">
            <Setter Property="FontSize" Value="10" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="TextAlignment" Value="Right"></Setter>
        </Style>
        <Style Selector="Border.item.collected">
            <Setter Property="BorderBrush" Value="#FFCE00" />
        </Style>
        <Style Selector="Border.item:not(.collected)">
            <Setter Property="BorderBrush" Value="#000000" />
        </Style>
    </Control.Styles>

    <Grid x:Name="MainGrid" x:FieldModifier="private">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" MinWidth="120" />
            <ColumnDefinition Width="4" />
            <ColumnDefinition Width="4*" MinWidth="240" />
        </Grid.ColumnDefinitions>

        <Border Margin="5" Grid.Column="0" Classes="tracker-box">
            <DockPanel>
                <Viewbox DockPanel.Dock="Top" StretchDirection="DownOnly">
                    <TextBlock FontSize="25" Text="{Binding SlotName}" TextAlignment="Center" />
                </Viewbox>

                <Border DockPanel.Dock="Top" Margin="0,5,0,0" Padding="5,2" Classes="tracker-box horizontal-only">
                    <Grid ColumnDefinitions="Auto,*,Auto" RowDefinitions="Auto,Auto,Auto,Auto,Auto,Auto,Auto">
                        <TextBlock Grid.Row="0" Grid.Column="0" Classes="meter-label" Text="RAT:" />
                        <ProgressBar Grid.Row="0" Grid.Column="1" Minimum="0" Maximum="40" Value="{Binding RatCount}" />
                        <TextBlock Margin="5,0,0,0" Grid.Row="0" Grid.Column="2" Classes="meter-label" Text="{Binding RatCount}" />

                        <TextBlock Grid.Row="1" Grid.Column="0" Classes="meter-label" Text="NOM:" />
                        <ProgressBar Grid.Row="1" Grid.Column="1" Minimum="-1" Maximum="1" Value="{Binding FoodFactor}" />
                        <TextBlock Margin="5,0,0,0" Grid.Row="1" Grid.Column="2" Classes="meter-label" Text="{Binding FoodFactor}" />

                        <TextBlock Grid.Row="2" Grid.Column="0" Classes="meter-label" Text="LCK:" />
                        <ProgressBar Grid.Row="2" Grid.Column="1" Minimum="-1" Maximum="1" Value="{Binding LuckFactor}" />
                        <TextBlock Margin="5,0,0,0" Grid.Row="2" Grid.Column="2" Classes="meter-label" Text="{Binding LuckFactor}" />

                        <TextBlock Grid.Row="3" Grid.Column="0" Classes="meter-label" Text="NRG:" />
                        <ProgressBar Grid.Row="3" Grid.Column="1" Minimum="-1" Maximum="1" Value="{Binding EnergyFactor}" />
                        <TextBlock Margin="5,0,0,0" Grid.Row="3" Grid.Column="2" Classes="meter-label" Text="{Binding EnergyFactor}" />

                        <TextBlock Grid.Row="4" Grid.Column="0" Classes="meter-label" Text="STY:" />
                        <ProgressBar Grid.Row="4" Grid.Column="1" Minimum="0" Maximum="1" Value="{Binding StyleFactor}" />
                        <TextBlock Margin="5,0,0,0" Grid.Row="4" Grid.Column="2" Classes="meter-label" Text="{Binding StyleFactor}" />

                        <TextBlock Grid.Row="5" Grid.Column="0" Classes="meter-label" Text="DIS:" />
                        <ProgressBar Grid.Row="5" Grid.Column="1" Minimum="0" Maximum="1" Value="{Binding DistractionCounter}" />
                        <TextBlock Margin="5,0,0,0" Grid.Row="5" Grid.Column="2" Classes="meter-label" Text="{Binding DistractionCounter}" />

                        <TextBlock Grid.Row="6" Grid.Column="0" Classes="meter-label" Text="CNF:" />
                        <ProgressBar Grid.Row="6" Grid.Column="1" IsIndeterminate="{Binding HasConfidence}" />
                        <TextBlock Margin="5,0,0,0" Grid.Row="6" Grid.Column="2" Classes="meter-label" Text="{Binding HasConfidence, Converter={StaticResource YNConverter}}" />
                    </Grid>
                </Border>

                <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                    <ItemsControl ItemsSource="{Binding ProgressionItems, Mode=OneTime}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border Margin="5" Padding="2" CornerRadius="8" Classes="tracker-box item" Classes.collected="{Binding Collected}">
                                    <Grid>
                                        <Image Height="48" Width="48" Source="{Binding Image, Mode=OneTime}" />
                                    </Grid>
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>
            </DockPanel>
        </Border>

        <GridSplitter Margin="0,5" Grid.Column="1" DoubleTapped="OnMainGridSplitterDoubleTapped" />

        <Border Margin="5" Grid.Column="2" Classes="tracker-box">
            <TabControl TabStripPlacement="Bottom">
                <TabControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal"></WrapPanel>
                    </ItemsPanelTemplate>
                </TabControl.ItemsPanel>

                <TabItem Header="Map">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                        <Viewbox>
                            <Grid>
                                <Svg Width="300" Height="450" Path="avares://Autopelago/Assets/Images/map.svg" />
                                <ItemsControl ItemsSource="{Binding CheckableLocations, Mode=OneTime}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <Canvas Width="300" Height="450" />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.Styles>
                                        <Style Selector="ContentPresenter">
                                            <Setter Property="Canvas.Left" Value="{ReflectionBinding CanvasLocation.X}" />
                                            <Setter Property="Canvas.Top" Value="{ReflectionBinding CanvasLocation.Y}" />
                                        </Style>
                                    </ItemsControl.Styles>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Image Height="16" Width="16" Source="{Binding Image, Mode=OneWay}" />
                                                <Image Height="12" Width="12" Source="{Binding QuestImage, Mode=OneWay}">
                                                    <Image.RenderTransform>
                                                        <TranslateTransform Y="-13" />
                                                    </Image.RenderTransform>
                                                </Image>
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </Grid>
                        </Viewbox>
                    </ScrollViewer>
                </TabItem>
                <TabItem IsEnabled="False">
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <materialIcons:MaterialIcon Kind="Lock" />
                            <TextBlock Margin="5,0,0,0" Text="Arcade" />
                        </StackPanel>
                    </TabItem.Header>
                </TabItem>
            </TabControl>
        </Border>
    </Grid>

</reactiveUi:ReactiveUserControl>
