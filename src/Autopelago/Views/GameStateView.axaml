<reactiveUi:ReactiveUserControl
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:my="using:Autopelago"
    xmlns:viewModels="using:Autopelago.ViewModels"
    xmlns:reactiveUi="http://reactiveui.net"
    xmlns:materialIcons="using:Material.Icons.Avalonia"
    xmlns:views="using:Autopelago.Views"
    Classes="GamerFont"
    mc:Ignorable="d" d:DesignWidth="950" d:DesignHeight="450"
    x:Class="Autopelago.Views.GameStateView"
    x:DataType="viewModels:GameStateViewModel"
    x:TypeArguments="viewModels:GameStateViewModel">

    <Design.DataContext>
        <viewModels:GameStateViewModel />
    </Design.DataContext>

    <Control.Styles>
        <!--
        For whatever reason, the default themes set really high minimum values on ProgressBar.
        All of ours sit inside containers with their own minimum values, so we can clear this.
        -->
        <Style Selector="ProgressBar:horizontal">
            <Setter Property="MinWidth" Value="0" />
        </Style>
        <Style Selector="ProgressBar:vertical">
            <Setter Property="MinHeight" Value="0" />
        </Style>

        <Style Selector="Border.tracker-box">
            <Setter Property="BorderBrush" Value="#505050" />
        </Style>
        <Style Selector="Border.tracker-box:not(.horizontal-only)">
            <Setter Property="BorderThickness" Value="2" />
        </Style>
        <Style Selector="Border.horizontal-only">
            <Setter Property="BorderThickness" Value="0,2" />
        </Style>
        <Style Selector="TextBlock.meter-label">
            <Setter Property="FontSize" Value="10" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="TextAlignment" Value="Right" />
        </Style>
        <Style Selector="Border.item.collected">
            <Setter Property="BorderBrush" Value="#FFCE00" />
        </Style>
        <Style Selector="Border.item:not(.collected)">
            <Setter Property="BorderBrush" Value="#000000" />
        </Style>
        <Style Selector="TextBlock.tooltip.big">
            <Setter Property="FontSize" Value="14" />
        </Style>
        <Style Selector="TextBlock.tooltip.small">
            <Setter Property="FontSize" Value="8" />
        </Style>
        <Style Selector="Image.player">
            <Setter Property="Effect">
                <DropShadowEffect OffsetX="1.5" OffsetY="1.5" BlurRadius="1" />
            </Setter>
            <Style Selector="^.notPaused.canAnimate">
                <Style.Animations>
                    <Animation Duration="0:0:1"
                               IterationCount="Infinite">
                        <KeyFrame Cue="0%">
                            <Setter Property="my:PlayerWiggleProperties.WiggleFactor" Value="0" />
                        </KeyFrame>
                        <KeyFrame Cue="25%">
                            <Setter Property="my:PlayerWiggleProperties.WiggleFactor" Value="10" />
                        </KeyFrame>
                        <KeyFrame Cue="50%">
                            <Setter Property="my:PlayerWiggleProperties.WiggleFactor" Value="0" />
                        </KeyFrame>
                        <KeyFrame Cue="75%">
                            <Setter Property="my:PlayerWiggleProperties.WiggleFactor" Value="-10" />
                        </KeyFrame>
                        <KeyFrame Cue="100%">
                            <Setter Property="my:PlayerWiggleProperties.WiggleFactor" Value="0" />
                        </KeyFrame>
                    </Animation>
                </Style.Animations>
            </Style>
        </Style>
        <Style Selector="Border.fillerLocation">
            <Setter Property="Effect">
                <DropShadowEffect OffsetX="0.6" OffsetY="0.6" BlurRadius="1" />
            </Setter>
        </Style>
        <Style Selector="Rectangle.fillerLocation">
            <Style Selector="^:not(.checked)">
                <Setter Property="Fill" Value="Yellow" />
            </Style>
            <Style Selector="^.checked">
                <Setter Property="Fill" Value="Gray" />
            </Style>
        </Style>
        <Style Selector="views|BitmapPairView.landmark">
            <Setter Property="Effect">
                <DropShadowEffect OffsetX="2.8" OffsetY="2.8" Opacity="0.8" />
            </Setter>
        </Style>
        <Style Selector="Polyline.toTargetLocation[IsVisible=true].canAnimate">
            <Style.Animations>
                <Animation Duration="0:0:1"
                           IterationCount="Infinite">
                    <KeyFrame Cue="0%">
                        <Setter Property="StrokeDashOffset" Value="8" />
                    </KeyFrame>
                    <KeyFrame Cue="100%">
                        <Setter Property="StrokeDashOffset" Value="0" />
                    </KeyFrame>
                </Animation>
            </Style.Animations>
            <Setter Property="StrokeDashArray" Value="4" />
        </Style>
    </Control.Styles>

    <Grid x:Name="MainGrid" x:FieldModifier="private">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" MinWidth="164" />
            <ColumnDefinition Width="4" />
            <ColumnDefinition Width="4*" MinWidth="240" />
        </Grid.ColumnDefinitions>

        <Border Margin="5" Grid.Column="0" Classes="tracker-box">
            <DockPanel>
                <Viewbox DockPanel.Dock="Top" StretchDirection="DownOnly">
                    <TextBlock FontSize="25" Text="{Binding SlotName}" TextAlignment="Center" />
                </Viewbox>

                <Viewbox DockPanel.Dock="Top" Margin="2,5,2,0" StretchDirection="DownOnly">
                    <Button Command="{Binding BackToMainMenuCommand}">
                        Back to Main Menu
                    </Button>
                </Viewbox>

                <Border DockPanel.Dock="Top" Margin="0,2,0,0" Padding="5,2" Classes="tracker-box horizontal-only">
                    <Grid RowDefinitions="Auto,Auto,Auto,Auto,Auto,Auto,Auto,Auto"
                          ToolTip.VerticalOffset="0" PointerMoved="OnPointerMovedOverControlWithToolTip">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <!-- 21 = the actual width for a 2-digit number in our gamer font -->
                            <ColumnDefinition Width="Auto" MinWidth="21" />
                        </Grid.ColumnDefinitions>
                        <ToolTip.Tip>
                            <StackPanel>
                                <TextBlock>RAT: Number of rats</TextBlock>
                                <TextBlock>NOM: Food</TextBlock>
                                <TextBlock>LCK: Luck</TextBlock>
                                <TextBlock>NRG: Energy</TextBlock>
                                <TextBlock>STY: Style</TextBlock>
                                <TextBlock>DIS: Distraction</TextBlock>
                                <TextBlock>STT: Startled</TextBlock>
                                <TextBlock>CNF: Confidence</TextBlock>
                            </StackPanel>
                        </ToolTip.Tip>

                        <TextBlock Grid.Row="0" Grid.Column="0" Classes="meter-label" Text="RAT:" />
                        <ProgressBar Grid.Row="0" Grid.Column="1" Minimum="0" Maximum="50" Value="{Binding RatCount}" />
                        <TextBlock Margin="5,0,0,0" Grid.Row="0" Grid.Column="2" Classes="meter-label" Text="{Binding RatCount}" />

                        <TextBlock Grid.Row="1" Grid.Column="0" Classes="meter-label" Text="NOM:" />
                        <ProgressBar Grid.Row="1" Grid.Column="1" Minimum="-20" Maximum="20" Value="{Binding FoodFactor}" />
                        <TextBlock Margin="5,0,0,0" Grid.Row="1" Grid.Column="2" Classes="meter-label" Text="{Binding FoodFactor}" />

                        <TextBlock Grid.Row="2" Grid.Column="0" Classes="meter-label" Text="LCK:" />
                        <ProgressBar Grid.Row="2" Grid.Column="1" Minimum="-4" Maximum="4" Value="{Binding LuckFactor}" />
                        <TextBlock Margin="5,0,0,0" Grid.Row="2" Grid.Column="2" Classes="meter-label" Text="{Binding LuckFactor}" />

                        <TextBlock Grid.Row="3" Grid.Column="0" Classes="meter-label" Text="NRG:" />
                        <ProgressBar Grid.Row="3" Grid.Column="1" Minimum="-20" Maximum="20" Value="{Binding EnergyFactor}" />
                        <TextBlock Margin="5,0,0,0" Grid.Row="3" Grid.Column="2" Classes="meter-label" Text="{Binding EnergyFactor}" />

                        <TextBlock Grid.Row="4" Grid.Column="0" Classes="meter-label" Text="STY:" />
                        <ProgressBar Grid.Row="4" Grid.Column="1" Minimum="0" Maximum="8" Value="{Binding StyleFactor}" />
                        <TextBlock Margin="5,0,0,0" Grid.Row="4" Grid.Column="2" Classes="meter-label" Text="{Binding StyleFactor}" />

                        <TextBlock Grid.Row="5" Grid.Column="0" Classes="meter-label" Text="DIS:" />
                        <ProgressBar Grid.Row="5" Grid.Column="1" Minimum="0" Maximum="3" Value="{Binding DistractionCounter}" />
                        <TextBlock Margin="5,0,0,0" Grid.Row="5" Grid.Column="2" Classes="meter-label" Text="{Binding DistractionCounter}" />

                        <TextBlock Grid.Row="6" Grid.Column="0" Classes="meter-label" Text="STT:" />
                        <ProgressBar Grid.Row="6" Grid.Column="1" Minimum="0" Maximum="3" Value="{Binding StartledCounter}" />
                        <TextBlock Margin="5,0,0,0" Grid.Row="6" Grid.Column="2" Classes="meter-label" Text="{Binding StartledCounter}" />

                        <TextBlock Grid.Row="7" Grid.Column="0" Classes="meter-label" Text="CNF:" />
                        <ProgressBar Grid.Row="7" Grid.Column="1" IsIndeterminate="{Binding HasConfidence}" />
                        <TextBlock Margin="5,0,0,0" Grid.Row="7" Grid.Column="2" Classes="meter-label" Text="{Binding HasConfidence, Converter={StaticResource YNConverter}}" />

                        <!-- Ensure that the tooltip shows no matter where your mouse ended up. -->
                        <Rectangle Grid.Row="0" Grid.Column="0" Grid.RowSpan="8" Grid.ColumnSpan="3" Fill="#00FFFFFF" />
                    </Grid>
                </Border>

                <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                    <ItemsControl ItemsSource="{Binding ProgressionItemsInPanel, Mode=OneTime}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border IsVisible="{Binding Relevant}" Margin="5" Padding="2" CornerRadius="8" Classes="tracker-box item" Classes.collected="{Binding Collected}"
                                        ToolTip.VerticalOffset="0" PointerMoved="OnPointerMovedOverControlWithToolTip">
                                    <ToolTip.Tip>
                                        <StackPanel>
                                            <TextBlock Classes="tooltip big">
                                                <TextBlock.Text>
                                                    <MultiBinding Converter="{StaticResource ItemNameConverter}">
                                                        <Binding Path="Model" Mode="OneTime" />
                                                        <Binding Path="LactoseIntolerant" />
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>

                                            <TextBlock Margin="0,5,0,0" Classes="tooltip small"
                                                       Text="{Binding Model.FlavorText, StringFormat='“{0}”', Mode=OneTime}"
                                                       IsVisible="{Binding Model.FlavorText, Mode=OneTime, Converter={x:Static StringConverters.IsNotNullOrEmpty}}" />
                                        </StackPanel>
                                    </ToolTip.Tip>
                                    <Panel PointerPressed="OnItemClicked">
                                        <Image Height="48" Width="48" Source="{Binding Image, Mode=OneWay}" />
                                    </Panel>
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>
            </DockPanel>
        </Border>

        <GridSplitter Margin="0,5" Grid.Column="1" DoubleTapped="OnMainGridSplitterDoubleTapped" />

        <Border Margin="5" Grid.Column="2" Classes="tracker-box">
            <TabControl TabStripPlacement="Bottom">
                <TabControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </TabControl.ItemsPanel>

                <TabItem Header="Map">
                    <Panel>
                        <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto"
                                      AllowAutoHide="False">
                            <Viewbox>
                                <Panel>
                                    <Panel.Resources>
                                        <DataTemplate x:Key="LandmarkToolTipDataTemplate" DataType="viewModels:LandmarkRegionViewModel">
                                            <StackPanel>
                                                <Border Padding="4" Classes="tracker-box item">
                                                    <TextBlock Classes="tooltip big"
                                                               Text="{Binding Location.Name, Mode=OneTime}" />
                                                </Border>

                                                <Border Margin="0,5,0,0" Padding="4" Classes="tracker-box item">
                                                    <Grid ColumnDefinitions="Auto,*" RowDefinitions="*, Auto">
                                                        <!-- Note: coordinates are NOT scaled like everything else on the map. -->
                                                        <views:BitmapPairView VerticalAlignment="Top" Height="64" Width="64"
                                                                              ViewModel="{Binding SaturatedImages}" />
                                                        <ContentControl Margin="5,0,0,0"
                                                                        Grid.Row="0"
                                                                        Grid.Column="1"
                                                                        Classes="tooltip big"
                                                                        Content="{Binding GameRequirementToolTipSource, Mode=OneWay}" />
                                                        <TextBlock Margin="0,15,0,0"
                                                                   Grid.Row="1"
                                                                   Grid.Column="0"
                                                                   Grid.ColumnSpan="2"
                                                                   Classes="tooltip small"
                                                                   Text="{Binding Location.FlavorText, StringFormat='“{0}”', Mode=OneTime}"
                                                                   IsVisible="{Binding Location.FlavorText, Mode=OneTime, Converter={x:Static StringConverters.IsNotNullOrEmpty}}" />
                                                    </Grid>
                                                </Border>
                                            </StackPanel>
                                        </DataTemplate>
                                    </Panel.Resources>
                                    <Panel Width="300" Height="{Binding MapHeight}">
                                        <Svg Width="300" Height="450" VerticalAlignment="Top" Path="/Assets/Images/map.svg">
                                            <Svg.Clip>
                                                <RectangleGeometry Rect="{Binding MapRect}" />
                                            </Svg.Clip>
                                        </Svg>
                                    </Panel>
                                    <ItemsControl ItemsSource="{Binding FillerLocations, Mode=OneTime}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <Canvas Width="300" Height="{Binding MapHeight}" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.Styles>
                                            <Style Selector="ContentPresenter">
                                                <Setter Property="Canvas.Left" Value="{Binding $self.((viewModels:FillerLocationViewModel)DataContext).PointWhenRenderingDot.X, FallbackValue=0}" />
                                                <Setter Property="Canvas.Top" Value="{Binding $self.((viewModels:FillerLocationViewModel)DataContext).PointWhenRenderingDot.Y, FallbackValue=0}" />
                                            </Style>
                                        </ItemsControl.Styles>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Border Classes="fillerLocation" IsVisible="{Binding Relevant}" RenderTransform="translate(-1.5px, -1.5px)" BorderBrush="Black" BorderThickness="0.5">
                                                    <Rectangle Classes="fillerLocation"
                                                               Classes.checked="{Binding Checked}"
                                                               Width="1.6" Height="1.6" />
                                                </Border>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                    <Polyline Classes="toTargetLocation"
                                              Classes.canAnimate="{Binding PlayerAnimations}"
                                              Stroke="Red"
                                              StrokeThickness="1"
                                              Points="{Binding CurrentPathPoints}">
                                        <Polyline.IsVisible>
                                            <MultiBinding Converter="{x:Static BoolConverters.And}">
                                                <Binding Path="PlayerIsActivated" />
                                                <Binding Path="!GameIsCompleted" />
                                            </MultiBinding>
                                        </Polyline.IsVisible>
                                    </Polyline>
                                    <views:LandmarksView Width="300" Height="{Binding MapHeight}" ViewModel="{Binding .}" />
                                    <ItemsControl ItemsSource="{Binding LandmarkRegions, Mode=OneTime}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <Canvas Width="300" Height="{Binding ViewModel.MapHeight, RelativeSource={RelativeSource FindAncestor, AncestorType=views:GameStateView}, FallbackValue=450}" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.Styles>
                                            <Style Selector="ContentPresenter">
                                                <Setter Property="Canvas.Left" Value="{Binding $self.((viewModels:LandmarkRegionViewModel)DataContext).CanvasLocation.X, FallbackValue=0}" />
                                                <Setter Property="Canvas.Top" Value="{Binding $self.((viewModels:LandmarkRegionViewModel)DataContext).CanvasLocation.Y, FallbackValue=0}" />
                                            </Style>
                                        </ItemsControl.Styles>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Panel>
                                                    <Rectangle Fill="Transparent" Height="12" Width="12"
                                                               PointerMoved="OnPointerMovedOverControlWithToolTip" ToolTip.VerticalOffset="0">
                                                        <ToolTip.Tip>
                                                            <ContentControl Content="{Binding .}" ContentTemplate="{StaticResource LandmarkToolTipDataTemplate}" />
                                                        </ToolTip.Tip>
                                                        <Rectangle.RenderTransform>
                                                            <TranslateTransform Y="-13" X="2" />
                                                        </Rectangle.RenderTransform>
                                                    </Rectangle>
                                                    <Rectangle Fill="Transparent" Height="16" Width="16"
                                                               PointerMoved="OnPointerMovedOverControlWithToolTip" ToolTip.VerticalOffset="0">
                                                        <ToolTip.Tip>
                                                            <ContentControl Content="{Binding .}" ContentTemplate="{StaticResource LandmarkToolTipDataTemplate}" />
                                                        </ToolTip.Tip>
                                                    </Rectangle>
                                                </Panel>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                    <Path Stroke="Red" StrokeThickness="1" Data="M -2 -2 L 2 2 M 2 -2 L -2 2">
                                        <Path.RenderTransform>
                                            <TranslateTransform X="{Binding TargetPoint.X}"
                                                                Y="{Binding TargetPoint.Y}" />
                                        </Path.RenderTransform>
                                        <Path.IsVisible>
                                            <MultiBinding Converter="{x:Static BoolConverters.And}">
                                                <Binding Path="PlayerIsActivated" />
                                                <Binding Path="!GameIsCompleted" />
                                            </MultiBinding>
                                        </Path.IsVisible>
                                    </Path>
                                    <Canvas Width="300" Height="{Binding MapHeight}">
                                        <views:BitmapPairView Width="16" Height="16"
                                                              Canvas.Left="{Binding X, Source={x:Static viewModels:LandmarkRegionViewModel.MoonLocation}}"
                                                              Canvas.Top="{Binding Y, Source={x:Static viewModels:LandmarkRegionViewModel.MoonLocation}}"
                                                              IsVisible="{Binding ShowMoonFlag}" ViewModel="{Binding MoonFlag}" />
                                        <Image Classes="player"
                                               Classes.notPaused="{Binding !Paused}"
                                               Classes.canAnimate="{Binding PlayerAnimations}"
                                               PointerMoved="OnPointerMovedOverControlWithToolTip"
                                               Width="16" Canvas.Left="{Binding CurrentPoint.X, Mode=OneWay}"
                                               Height="16" Canvas.Top="{Binding CurrentPoint.Y, Mode=OneWay}"
                                               Source="{Binding PlayerToken}"
                                               my:PlayerWiggleProperties.TargetAngle="{Binding RelativeAngle}"
                                               ToolTip.ToolTipOpening="OnPlayerToolTipOpening"
                                               PointerPressed="OnPlayerClicked">
                                            <Image.RenderTransform>
                                              <!--
                                              HACK: this must be TransformGroup with RotateTransform
                                              in the first slot, otherwise PlayerWiggleProperties
                                              would break!
                                              -->
                                              <TransformGroup>
                                                <ScaleTransform ScaleX="{Binding ScaleX}" />
                                                <RotateTransform />
                                              </TransformGroup>
                                            </Image.RenderTransform>
                                            <Image.Transitions>
                                                <Transitions>
                                                    <DoubleTransition Property="Canvas.Left" Duration="{x:Static viewModels:GameStateViewModel.MovementAnimationTime}" />
                                                    <DoubleTransition Property="Canvas.Top" Duration="{x:Static viewModels:GameStateViewModel.MovementAnimationTime}" />
                                                </Transitions>
                                            </Image.Transitions>
                                            <ToolTip.Tip>
                                              <DockPanel>
                                                <Border DockPanel.Dock="Top" Padding="4" Classes="tracker-box item">
                                                  <TextBlock Classes="tooltip big"
                                                             Text="Rat Thoughts" />
                                                </Border>

                                                <Border Margin="0,5,0,0" Padding="4" Classes="tracker-box item">
                                                  <Grid ColumnDefinitions="Auto,*">
                                                    <!-- Note: coordinates are NOT scaled like everything else on the map. -->
                                                    <Image Height="64" Width="64" Source="{Binding PlayerToken}" />
                                                    <Grid Margin="5,0,0,0" Grid.Column="1"
                                                          Classes="tooltip big"
                                                          RowDefinitions="Auto,Auto,*,Auto"
                                                          ColumnDefinitions="Auto,*">
                                                      <TextBlock Grid.Row="0" Grid.Column="0" Margin="5,0,0,0" VerticalAlignment="Center" Text="●" />
                                                      <TextBlock Grid.Row="0" Grid.Column="1" Margin="2,0,0,0" Text="{Binding CurrentLocationName, StringFormat='At \'{0}\'.'}" />
                                                      <TextBlock Grid.Row="1" Grid.Column="0" Margin="5,10,0,0" VerticalAlignment="Center" Text="●" />
                                                      <TextBlock Grid.Row="1" Grid.Column="1" Margin="2,10,0,0" Text="{Binding TargetLocationName, StringFormat='Going to \'{0}\'.'}" />
                                                      <TextBlock Grid.Row="3" Grid.Column="0" Margin="5,20,0,0" Grid.ColumnSpan="2" Classes="tooltip small" Text="{Binding RatThought}" />
                                                    </Grid>
                                                  </Grid>
                                                </Border>
                                              </DockPanel>
                                            </ToolTip.Tip>
                                        </Image>
                                        <TextBlock Text="eek!"
                                                   FontSize="3.5"
                                                   IsVisible="{Binding StartledCounter, Converter={StaticResource NonZeroConverter}}"
                                                   Canvas.Left="{Binding CurrentPoint.X, Mode=OneWay}"
                                                   Canvas.Top="{Binding CurrentPoint.Y, Mode=OneWay}"
                                                   RenderTransform="translate(2px, -3px)" />
                                        <materialIcons:MaterialIcon Kind="Antenna"
                                                                    Width="6"
                                                                    Height="6"
                                                                    IsVisible="{Binding MovingToConspiratorial}"
                                                                    Canvas.Left="{Binding CurrentPoint.X, Mode=OneWay}"
                                                                    Canvas.Top="{Binding CurrentPoint.Y, Mode=OneWay}"
                                                                    RenderTransform="translate(5px, -3px)" />
                                        <materialIcons:MaterialIcon Kind="LightbulbDimmer10"
                                                                    Width="6"
                                                                    Height="6"
                                                                    IsVisible="{Binding MovingToSmart}"
                                                                    Canvas.Left="{Binding CurrentPoint.X, Mode=OneWay}"
                                                                    Canvas.Top="{Binding CurrentPoint.Y, Mode=OneWay}"
                                                                    RenderTransform="translate(5px, -3px)" />
                                    </Canvas>
                                </Panel>
                            </Viewbox>
                        </ScrollViewer>
                        <ToggleButton HorizontalAlignment="Left"
                                      VerticalAlignment="Bottom"
                                      Margin="5,0,0,5"
                                      Width="32"
                                      Height="32"
                                      IsChecked="{Binding Paused}"
                                      Content="{materialIcons:MaterialIconExt Pause, Size=24}" />
                    </Panel>
                </TabItem>
                <TabItem IsEnabled="False">
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <materialIcons:MaterialIcon Kind="Lock" />
                            <TextBlock Margin="5,0,0,0" Text="Arcade" />
                        </StackPanel>
                    </TabItem.Header>
                </TabItem>
            </TabControl>
        </Border>
    </Grid>

</reactiveUi:ReactiveUserControl>
