:root {
    --not-found-filter-recolor: saturate(0.2) brightness(0.3);
    --not-found-filter-drop-shadow: drop-shadow(0px 0px 5px rgba(234, 126, 128, 0.60));
    --found-filter-drop-shadow: drop-shadow(0px 0px 5px rgba(150, 150, 0, 0.70));
}

body {
    color-scheme: light dark;
    color: CanvasText;
    background: Canvas;
}

.page-container {
    margin: 8px;

    display: grid;
    grid-template-rows: min-content 1fr;
    grid-template-columns: 1fr 4fr;
}

.rats-and-auras-container {
    grid-row: 2;
    grid-column: 1;

    display: grid;
    grid-template-columns: minmax(128px, 1.05fr) 1fr; /* thought: shrink the images based on @media? seems overkill... */
}

.received-items-container {
    grid-row: 3;
    grid-column: 1;

    display: flex;
    flex-flow: row wrap;
    justify-content: start;
    align-content: start;
}

.world-maps-container {
    grid-row: 1 / span 3;
    grid-column: 2;
}

.rats-container {
    display: flex;
    flex-flow: row wrap;
    justify-content: start;
    align-content: start;
}

.received-item img {
    max-width: 64px;
    max-height: 64px;
    object-fit: scale-down;
}

.received-normal-rat {
    position: relative;
}

.auras-container h2:nth-of-type(1) {
    margin-top: 0;
}

.received-item:not(.not-found) img {
    filter: var(--found-filter-drop-shadow);
}

.received-item.not-found img {
    filter: var(--not-found-filter-recolor) var(--not-found-filter-drop-shadow);
}

.overlaid-text {
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
}

.arrow-line,.arrow-head {
    stroke: CanvasText;
    fill: Canvas;
}

.checked-location:not(.not-checked,not-open) {
    filter: var(--found-filter-drop-shadow);
}

.checked-location.not-checked.not-open {
    filter: var(--not-found-filter-recolor) var(--not-found-filter-drop-shadow);
}

.checked-location.current-region {
    transform-box: fill-box;
    transform-origin: center;
    animation: 1s linear 0s infinite wiggle;
}

.traversed-path.current-region .arrow-line {
    stroke-dasharray: 5;
    animation: 1s linear 0s infinite dash;
}

.traversed-path.not-open {
    filter: var(--not-found-filter-recolor);
}

@keyframes wiggle {
    0% {
        transform: rotate(-15deg);
    }

    50% {
        transform: rotate(15deg);
    }

    100% {
        transform: rotate(-15deg);
    }
}

@keyframes dash {
    from {
        stroke-dashoffset: 10;
    }
    to {
        stroke-dashoffset: 0;
    }
}
